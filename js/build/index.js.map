{"version":3,"sources":["../src/index.js"],"names":[],"mappings":";;;;;;IAAM,I;AACJ,gBAAY,KAAZ,EAAmB;AAAA;;AACjB,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,OAAL,GAAe,KAAK,aAAL,CAAmB,KAAnB,CAAf;AACD;;;;kCAEa,K,EAAM;AAClB;AACA,UAAI,UAAU,SAAS,aAAT,CAAuB,KAAvB,CAAd;AACA,UAAI,cAAc,SAAS,aAAT,CAAuB,GAAvB,CAAlB;AACA,UAAI,WAAW,SAAS,aAAT,CAAuB,GAAvB,CAAf;;AAEA;AACA,cAAQ,YAAR,CAAqB,OAArB,EAA8B,MAA9B;AACA,eAAS,YAAT,CAAsB,OAAtB,EAA+B,aAA/B;AACA,eAAS,YAAT,CAAsB,MAAtB,EAA8B,GAA9B;;AAEA;AACA,eAAS,SAAT,GAAqB,QAArB;AACA,kBAAY,SAAZ,GAAwB,KAAK,KAA7B;;AAEA;AACA,cAAQ,WAAR,CAAoB,WAApB;AACA,cAAQ,WAAR,CAAoB,QAApB;;AAEA;AACA,eAAS,gBAAT,CAA0B,OAA1B,EAAmC,KAAK,MAAL,CAAY,IAAZ,CAAiB,OAAjB,CAAnC;;AAEA,aAAO,OAAP;AACD;;AAED;;;;0BACK;AACH,eAAS,aAAT,CAAuB,QAAvB,EAAiC,WAAjC,CAA6C,KAAK,OAAlD,EAA2D,SAA3D,GAAuE,wBAAvE;AACD;;;oCAEc;AACb,mBAAa,OAAb,CAAqB,KAAK,KAA1B,EAAiC,KAAK,KAAtC;AACD;;;6BAEO;;AAEN;AACA,UAAI,cAAc,IAAlB;;AAEA;AACA,mBAAa,UAAb,CAAwB,KAAK,UAAL,CAAgB,SAAxC;;AAEA;AACA,WAAK,SAAL,GAAiB,yBAAjB;AACA,iBAAY,YAAM;AAChB;AACA,oBAAY,MAAZ;AACD,OAHD,EAGG,IAHH;AAKD;;;;;;IAGG,G;AACJ,iBAAc;AAAA;;AACZ,YAAQ,GAAR,CAAY,kCAAZ;;AAEA,SAAK,MAAL,GAAc,SAAS,cAAT,CAAwB,YAAxB,CAAd;AACA,SAAK,QAAL,GAAgB,SAAS,cAAT,CAAwB,YAAxB,CAAhB;;AAEA;AACA,SAAK,MAAL,CAAY,gBAAZ,CAA6B,OAA7B,EAAsC,KAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB,CAAtC;;AAEA;AACA,SAAK,QAAL,CAAc,gBAAd,CAA+B,OAA/B,EAAwC,UAAC,CAAD,EAAO;AAC7C;AACA,QAAE,cAAF;AACA;AACA,UAAI,EAAE,OAAF,KAAc,EAAlB,EAAsB;AACpB;AACA,iBAAS,cAAT,CAAwB,YAAxB,EAAsC,KAAtC;AACD;AACF,KARD;;AAUA,SAAK,oBAAL;AAED;;;;2CAEsB;AACrB,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,aAAa,MAAjC,EAAyC,GAAzC,EAA8C;AAC5C,YAAI,OAAO,IAAI,IAAJ,CAAS,aAAa,OAAb,CAAqB,aAAa,GAAb,CAAiB,CAAjB,CAArB,CAAT,CAAX;AACA,aAAK,GAAL;AACD;AACF;;AAED;;;;+BACW,C,EAAE;AACX;AACA,QAAE,cAAF;AACA,UAAI,OAAO,IAAI,IAAJ,CAAS,KAAK,QAAL,CAAc,KAAvB,CAAX;;AAEA;AACA,WAAK,GAAL;;AAEA;AACA,WAAK,aAAL;;AAEA;AACA,WAAK,KAAL;AACD;;AAGD;;;;4BACO;AACL,WAAK,QAAL,CAAc,KAAd,GAAsB,EAAtB;AACD;;;;;;AAIH,IAAI,MAAM,IAAI,GAAJ,EAAV","file":"index.js","sourcesContent":["class Note {\r\n  constructor(title) {\r\n    this.title = title;\r\n    this.element = this.createElement(title);\r\n  }\r\n\r\n  createElement(title){\r\n    // create needed elements\r\n    let newNote = document.createElement('div');\r\n    let noteContent = document.createElement(\"p\");\r\n    let noteLink = document.createElement(\"a\");\r\n\r\n    // add needed attributes\r\n    newNote.setAttribute(\"class\", \"card\");\r\n    noteLink.setAttribute(\"class\", \"card-remove\");\r\n    noteLink.setAttribute(\"href\", \"#\");\r\n\r\n    // add content\r\n    noteLink.innerHTML = \"Remove\";\r\n    noteContent.innerHTML = this.title;\r\n\r\n    //build note\r\n    newNote.appendChild(noteContent);\r\n    newNote.appendChild(noteLink);\r\n\r\n    // click event to remove this note\r\n    noteLink.addEventListener('click', this.remove.bind(newNote));\r\n\r\n    return newNote;\r\n  }\r\n\r\n  // this function will append the note to the screen somehow\r\n  add(){\r\n    document.querySelector(\".notes\").appendChild(this.element).className = 'card animated zoomInUp';\r\n  }\r\n\r\n  saveToStorage(){\r\n    localStorage.setItem(this.title, this.title);\r\n  }\r\n\r\n  remove(){\r\n\r\n    // remember the note element\r\n    let removedNote = this;\r\n\r\n    // delete from local storage also\r\n    localStorage.removeItem(this.firstChild.innerHTML);\r\n\r\n    // animate the removed element\r\n    this.className = 'card animated zoomOutUp';\r\n    setTimeout( () => {\r\n      // delete element after animation (after 1 sec)\r\n      removedNote.remove();\r\n    }, 1000);\r\n\r\n  }\r\n}\r\n\r\nclass App {\r\n  constructor() {\r\n    console.log(\"👊🏼 The CodeMaster Constructor!\");\r\n\r\n    this.btnAdd = document.getElementById('btnAddNote');\r\n    this.noteText = document.getElementById(\"txtAddNote\");\r\n\r\n    // execute a function when the user use the button\r\n    this.btnAdd.addEventListener(\"click\", this.createNote.bind(this));\r\n\r\n    // execute a function when the user releases a key on the keyboard\r\n    this.noteText.addEventListener(\"keyup\", (e) => {\r\n      // cancel the default action, if needed\r\n      e.preventDefault();\r\n      // dnmber 13 is the \"Enter\" key on the keyboard\r\n      if (e.keyCode === 13) {\r\n        // trigger the button element with a click\r\n        document.getElementById('btnAddNote').click();\r\n      }\r\n    });\r\n\r\n    this.loadNotesFromStorage();\r\n\r\n  }\r\n\r\n  loadNotesFromStorage() {\r\n    for (let i = 0; i < localStorage.length; i++) {\r\n      let note = new Note(localStorage.getItem(localStorage.key(i)));\r\n      note.add();\r\n    }\r\n  }\r\n\r\n  // this function will create a new note by using the Note() class\r\n  createNote(e){\r\n    // cancel the default action, if needed\r\n    e.preventDefault();\r\n    let note = new Note(this.noteText.value);\r\n\r\n    // add note to the screen\r\n    note.add();\r\n\r\n    // add note to the local storage\r\n    note.saveToStorage();\r\n\r\n    // reset the the input form\r\n    this.reset();\r\n  }\r\n\r\n\r\n  // this function will reset the form\r\n  reset(){\r\n    this.noteText.value = \"\";\r\n  }\r\n\r\n}\r\n\r\nlet app = new App();\r\n"]}